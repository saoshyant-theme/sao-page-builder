jQuery(function($) {
	'use strict';
	jQuery(document).ready(function() {
  	$('.sao-slider').each(function(index, block) {	 
 
		var data_slider = jQuery.parseJSON( $(this).find('.sao-slider-options').html());
	 
		$(this).show().find('.sao-slider-options').prev('.sao-slider-list').sao_lightSlider(data_slider);
 			
	});
	/****************************************************
	Image Resize
	*****************************************************/	
	function sao_img_resize(){ 
  		$('.sao-image-item,.sao-image-item .sao-thumb,.sao-slider-thumb,.sao-post-module-1 .sao-thumb,.sao-post-module-2 .sao-thumb,.sao-post-module-3 .sao-thumb').each(function(index, block) {
			var width_img = $(this).find('img').attr('width');
			var height_img = $(this).find('img').attr('height');
			var ratio_img = width_img/height_img;		    
			var width = $(this).width();
			var height = $(this).height();
			var ratio = width/height;
			if(ratio_img <= ratio ){
				$(this).find('img').css("width" ,"100.1%").css("min-width" ,"auto").css("height" ,"auto").css("min-height" ,"100.1%");		
			}else{
				$(this).find('img').css("width" ,"auto").css("min-width" ,"100.1%").css("height" ,"100.1%").css("min-height" ,"auto");		
			}
		}); 	
	}
		
	// Generated by CoffeeScript 1.9.2
	
	/**
	@license Sticky-kit v1.1.2 | WTFPL | Leaf Corcoran 2015 | http://leafo.net
	 */
	
	(function() {
	  var $, win;
	
	  $ = this.jQuery || window.jQuery;
	
	  win = $(window);
	
	  $.fn.stick_in_parent = function(opts) {
		var doc, elm, enable_bottoming, fn, i, inner_scrolling, len, manual_spacer, offset_top, parent_selector, recalc_every, sticky_class;
		if (opts == null) {
		  opts = {};
		}
		sticky_class = opts.sticky_class, inner_scrolling = opts.inner_scrolling, recalc_every = opts.recalc_every, parent_selector = opts.parent, offset_top = opts.offset_top, manual_spacer = opts.spacer, enable_bottoming = opts.bottoming;
		if (offset_top == null) {
		  offset_top = 0;
		}
		if (parent_selector == null) {
		  parent_selector = void 0;
		}
		if (inner_scrolling == null) {
		  inner_scrolling = true;
		}
		if (sticky_class == null) {
		  sticky_class = "is_stuck";
		}
		doc = $(document);
		if (enable_bottoming == null) {
		  enable_bottoming = true;
		}
		fn = function(elm, padding_bottom, parent_top, parent_height, top, height, el_float, detached) {
		  var bottomed, detach, fixed, last_pos, last_scroll_height, offset, parent, recalc, recalc_and_tick, recalc_counter, spacer, tick;
		  if (elm.data("sticky_kit")) {
			return;
		  }
		  elm.data("sticky_kit", true);
		  last_scroll_height = doc.height();
		  parent = elm.parent();
		  if (parent_selector != null) {
			parent = parent.closest(parent_selector);
		  }
		  if (!parent.length) {
			throw "failed to find stick parent";
		  }
		  fixed = false;
		  bottomed = false;
		  spacer = manual_spacer != null ? manual_spacer && elm.closest(manual_spacer) : $("<div />");
		  if (spacer) {
			spacer.css('position', elm.css('position'));
		  }
		  recalc = function() {
			var border_top, padding_top, restore;
			if (detached) {
			  return;
			}
			last_scroll_height = doc.height();
			border_top = parseInt(parent.css("border-top-width"), 10);
			padding_top = parseInt(parent.css("padding-top"), 10);
			padding_bottom = parseInt(parent.css("padding-bottom"), 10);
			parent_top = parent.offset().top + border_top + padding_top;
			parent_height = parent.height();
			if (fixed) {
			  fixed = false;
			  bottomed = false;
			  if (manual_spacer == null) {
				elm.insertAfter(spacer);
				spacer.detach();
			  }
			  elm.css({
				position: "",
				top: "",
				width: "",
				bottom: ""
			  }).removeClass(sticky_class);
			  restore = true;
			}
			top = elm.offset().top - (parseInt(elm.css("margin-top"), 10) || 0) - offset_top;
			height = elm.outerHeight(true);
			el_float = elm.css("float");
			if (spacer) {
			  spacer.css({
				width: elm.outerWidth(true),
				height: height,
				display: elm.css("display"),
				"vertical-align": elm.css("vertical-align"),
				"float": el_float
			  });
			}
			if (restore) {
			  return tick();
			}
		  };
		  recalc();
		  if (height === parent_height) {
			return;
		  }
		  last_pos = void 0;
		  offset = offset_top;
		  recalc_counter = recalc_every;
		  tick = function() {
			var css, delta, recalced, scroll, will_bottom, win_height;
			if (detached) {
			  return;
			}
			recalced = false;
			if (recalc_counter != null) {
			  recalc_counter -= 1;
			  if (recalc_counter <= 0) {
				recalc_counter = recalc_every;
				recalc();
				recalced = true;
			  }
			}
			if (!recalced && doc.height() !== last_scroll_height) {
			  recalc();
			  recalced = true;
			}
			scroll = win.scrollTop();
			if (last_pos != null) {
			  delta = scroll - last_pos;
			}
			last_pos = scroll;
			if (fixed) {
			  if (enable_bottoming) {
				will_bottom = scroll + height + offset > parent_height + parent_top;
				if (bottomed && !will_bottom) {
				  bottomed = false;
				  elm.css({
					position: "fixed",
					bottom: "",
					top: offset
				  }).trigger("sticky_kit:unbottom");
				}
			  }
			  if (scroll < top) {
				fixed = false;
				offset = offset_top;
				if (manual_spacer == null) {
				  if (el_float === "left" || el_float === "right") {
					elm.insertAfter(spacer);
				  }
				  spacer.detach();
				}
				css = {
				  position: "",
				  width: "",
				  top: ""
				};
				elm.css(css).removeClass(sticky_class).trigger("sticky_kit:unstick");
			  }
			  if (inner_scrolling) {
				win_height = win.height();
				if (height + offset_top > win_height) {
				  if (!bottomed) {
					offset -= delta;
					offset = Math.max(win_height - height, offset);
					offset = Math.min(offset_top, offset);
					if (fixed) {
					  elm.css({
						top: offset + "px"
					  });
					}
				  }
				}
			  }
			} else {
			  if (scroll > top) {
				fixed = true;
				css = {
				  position: "fixed",
				  top: offset
				};
				css.width = elm.css("box-sizing") === "border-box" ? elm.outerWidth() + "px" : elm.width() + "px";
				elm.css(css).addClass(sticky_class);
				if (manual_spacer == null) {
				  elm.after(spacer);
				  if (el_float === "left" || el_float === "right") {
					spacer.append(elm);
				  }
				}
				elm.trigger("sticky_kit:stick");
			  }
			}
			if (fixed && enable_bottoming) {
			  if (will_bottom == null) {
				will_bottom = scroll + height + offset > parent_height + parent_top;
			  }
			  if (!bottomed && will_bottom) {
				bottomed = true;
				if (parent.css("position") === "static") {
				  parent.css({
					position: "relative"
				  });
				}
				return elm.css({
				  position: "absolute",
				  bottom: padding_bottom,
				  top: "auto"
				}).trigger("sticky_kit:bottom");
			  }
			}
		  };
		  recalc_and_tick = function() {
			recalc();
			return tick();
		  };
		  detach = function() {
			detached = true;
			win.off("touchmove", tick);
			win.off("scroll", tick);
			win.off("resize", recalc_and_tick);
			$(document.body).off("sticky_kit:recalc", recalc_and_tick);
			elm.off("sticky_kit:detach", detach);
			elm.removeData("sticky_kit");
			elm.css({
			  position: "",
			  bottom: "",
			  top: "",
			  width: ""
			});
			parent.position("position", "");
			if (fixed) {
			  if (manual_spacer == null) {
				if (el_float === "left" || el_float === "right") {
				  elm.insertAfter(spacer);
				}
				spacer.remove();
			  }
			  return elm.removeClass(sticky_class);
			}
		  };
		  win.on("touchmove", tick);
		  win.on("scroll", tick);
		  win.on("resize", recalc_and_tick);
		  $(document.body).on("sticky_kit:recalc", recalc_and_tick);
		  elm.on("sticky_kit:detach", detach);
		  return setTimeout(tick, 0);
		};
		for (i = 0, len = this.length; i < len; i++) {
		  elm = this[i];
		  fn($(elm));
		}
		return this;
	  };
	
	}).call(this);
 

		
	/****************************************************
	Responsvie Width tabs
	*****************************************************/	
  
	function sao_resposive_warp(){
 		var widths = $(window).width();
	 
		if (1199 <  widths){
			
 			$('.sao-column-main-last').each(function(key,value) {
				var data = $(this).attr('data-column');
				$('[data-column="'+data+'"]').wrapAll('<aside class="sao-column-flex"></aside>');
			});
		 
			
		} else if (1199 > widths && widths >= 992){
			
			$('.sao-column-desktop-last').each(function(key,value) {
				var data = $(this).attr('data-desktop');
				$('[data-desktop="'+data+'"]').wrapAll('<aside class="sao-column-flex"></aside>');
			});
			
		} else if (991 > widths && widths >= 768){
			
			$('.sao-column-tablet-last').each(function(key,value) {
				var data = $(this).attr('data-tablet');
				$('[data-tablet="'+data+'"]').wrapAll('<aside  class="sao-column-flex"></aside>');
			});
			
		} else if (768 > widths && widths > 501){
			$('.sao-column-phablet-last').each(function(key,value) {
				var data = $(this).attr('data-phablet');
				$('[data-phablet="'+data+'"]').wrapAll('<aside  class="sao-column-flex"></aside>');
			});
		} else if (500 > widths  ){
			$('.sao-column-phone-last').each(function(key,value) {
				var data = $(this).attr('data-phone');
				$('[data-phone="'+data+'"]').wrapAll('<aside class="sao-column-flex"></aside>');
			});
		}
				
	}		
	 sao_resposive_warp();
	$(".sao-section-sticky").each(function(index, element) {
		$(this).find('.sao-column-flex').each(function(index, element) {
			$(this).find('.sao-column-container').each(function(index, element) {
				$(this).stick_in_parent();
 			});
 		});
	});
 	/****************************************************
	Resize
	*****************************************************/	
	$(window).resize(function () { 
		$('.sao-column-main-last,.sao-column-desktop-last,.sao-column-tablet-last,.sao-column-phablet-last,.sao-column-phone-last').each(function(key,value) {
			var pTags = $( this );
			if ( pTags.parent().is( "aside" ) ) {
				pTags.unwrap();
			}  
 		});		 		 	
 		sao_resposive_warp();
	});
   
   
	/****************************************************
	Auto Width Warp
	*****************************************************/	
	/****************************************************
	Auto Width Warp
	*****************************************************/	
 	function auto_width_warp(items,id){
		id.find('.sao-auto-width'+ items).each(function() {
			var widths = $(this).width();
	 
			if (1400 < widths ){
				$(this).addClass('sao-1920'+ items);
			
			}else if (1200 < widths && widths <= 1400){
				$(this).addClass('sao-1400'+ items);
			
			}else if (1000 < widths && widths <= 1200){
				$(this).addClass('sao-1200'+ items);
			
			}else if (800 < widths && widths <= 1000){
				$(this).addClass('sao-1000'+ items);
			
			}else if (600 < widths && widths <= 800){
				$(this).addClass('sao-800'+ items);
				 
			}else if (500 < widths && widths <= 600){
				$(this).addClass('sao-600'+ items);
						
			}else if (400 < widths && widths <= 500){
				$(this).addClass('sao-500'+ items);
							
			}else if (300 < widths && widths <= 400){
				$(this).addClass('sao-400'+ items);
	 
			} else if (250 < widths && widths <= 300){
				$(this).addClass('sao-300'+ items);
				
			}else if (200 < widths && widths <= 250){
				$(this).addClass('sao-250'+ items);
				
			}else if ( 150 < widths && widths <= 200){
				$(this).addClass('sao-200'+ items);
				
			}else if ( 150 > widths ){
				$(this).addClass('sao-150'+ items);
				
			}		 
		});
	}
	
	
	/****************************************************
	Remove Auto Width Warp
	*****************************************************/	
 	function remove_auto_width_warp(items,id ){
  		id.find('.sao-auto-width'+ items).each(function() {
			var widths = $(this).width();
	 
 				$(this).removeClass('sao-1920'+ items).removeClass('sao-1400'+ items).removeClass('sao-1200'+ items).removeClass('sao-1000'+ items).removeClass('sao-800'+ items).removeClass('sao-600'+ items).removeClass('sao-500'+ items).removeClass('sao-400'+ items).removeClass('sao-300'+ items).removeClass('sao-250'+ items).removeClass('sao-200'+ items).removeClass('sao-150'+ items);
	
 			
 		}); 
	}
 	function  auto_width(id ){
		remove_auto_width_warp('',id);
		remove_auto_width_warp('-item',id);
		remove_auto_width_warp('-post',id);
	
		auto_width_warp('',id);   
		auto_width_warp('-post',id);		
		auto_width_warp('-item',id);	
		
	} 
	/****************************************************
	Width Warp Resize
	*****************************************************/	
	$(window).resize(function () { 
		auto_width($('body'));
  	});
	auto_width($('body'));
 
 
	 
	/****************************************************
	Load More
	*****************************************************/		 
	$(".sao-load-more span").on("click",function(){
		var gets = $(this).attr('sao-id');
		var sao_module = $(this).parents('.sao-element-item ');
 		$(this).parent().addClass('sao-loading');
  		var sao_item = $(this).parents('.sao-element-item');
		var sao_this = $(this);
 		var sao_list = $(this).parents('.sao-element-item').find('.sao-post-list');
 		var data_option = $(this).next().html();
		var dataajax = jQuery.parseJSON(data_option);
 		dataajax['count'] =  true;
   		dataajax['max_page'] =  $(this).attr('data-max_page');
		var max_pages =  $(this).attr('data-max_page');
		var pageNumber =  sao_this.attr('data-page');
  		dataajax['pageNumber'] = pageNumber;
  		// This does the ajax request
		$.ajax({
			 type: "POST",
			dataType: "html",
			url: builder_js.ajaxurl,
			data:dataajax,
			success:function(data) {
				var $data = $(data);
	 
				if($data.length){
					sao_list.append($data);
 					sao_this.parent().addClass('sao-loading');
					sao_this.parent().removeClass('sao-loading');
				} 				  
 				remove_auto_width_warp('');
				auto_width_warp('');   
				remove_auto_width_warp('-item');
				auto_width_warp('-item');
				sao_img_resize();
				  
 				pageNumber++;
				sao_this.attr('data-page', pageNumber );
				if(pageNumber > dataajax['max_page']) {
					sao_this.parent().hide();
				} 
				 
   			},
			error : function(jqXHR, textStatus, errorThrown) {
				$loader.html(jqXHR + " :: " + textStatus + " :: " + errorThrown);
			}
		});  
	 
	});
 
 	$('.sao-load-more span').each(function(index, block) {
		var max_page =  $(this).data('max_page');
		if(max_page > 1 ){
			$(this).parent().show();
		}
 	});		 
	
	/****************************************************
	Accordion
	*****************************************************/	
	$(document).on('click', '.sao-accordion-deactive h3', function(e) {
		var accordion = $(this).parent().parent();
		$(accordion).find('.sao-accordion-content').each(function(index, block) {
			$(this).slideUp(300);
			$(this).parents('.sao-accordion-item').removeClass('sao-accordion-active').addClass('sao-accordion-deactive');
		});
			
		$(this).parent().addClass('sao-accordion-active').removeClass('sao-accordion-deactive');
		$(this).next().slideDown(300);
	});
		

	$(document).on('click', '.sao-accordion-active  h3', function(e) {
		$(this).next('.sao-accordion-content').slideUp(300);
		$(this).parent().removeClass('sao-accordion-active').addClass('sao-accordion-deactive');
	});		
 		
	/****************************************************
	Slider
	*****************************************************/	
 
	/****************************************************
	Tabs
	*****************************************************/		
	$('.sao-tabs-active').each(function(e) {
		var key = $(this).attr('data-key');
		$(this).parent().next().find('[data-key="'+key+'"]').addClass('sao-tabs-content-active');
	});
		
 	$(document).on('click', 'h3.sao-tabs-deactive', function(e) {
		var tabs = $(this).parent().parent();
	
		$(tabs).find('.sao-tabs-content').each(function(index, block) {
			$(this).removeClass('sao-tabs-content-active');
		});
			
		$(tabs).find('.sao-tabs-active').each(function(index, block) {
			$(this).removeClass('sao-tabs-active').addClass('sao-tabs-deactive');
		});
			
		var key = $(this).attr('data-key');
		$(this).removeClass('sao-tabs-deactive').addClass('sao-tabs-active');

		$(this).parent().next().find('[data-key="'+key+'"]').addClass('sao-tabs-content-active');
 
	});
  
  	/****************************************************
	Resize
	*****************************************************/	
 	$(window).resize(function () { 
		sao_img_resize();
	});
	sao_img_resize();
 		 
	});
	 
 
});
 